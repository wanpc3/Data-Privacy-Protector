{"ast":null,"code":"var _jsxFileName = \"/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx\",\n  _s = $RefreshSig$();\n// src/App.jsx\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport NewPartnerModal from './Components/NewPartnerModal/NewPartnerModal';\nimport ReviewModal from './Components/ReviewModal/ReviewModal';\nimport AuditLog from './Components/AuditLog/AuditLog'; // Import AuditLog\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/default_partner_icon.svg'; // Ensure this path is correct in your public folder\n\nfunction App() {\n  _s();\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isNewPartnerModalOpen, setIsNewPartnerModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null);\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [loadingPartners, setLoadingPartners] = useState(true);\n  const [error, setError] = useState(null);\n  const [auditLogData, setAuditLogData] = useState(null); // State for audit log data\n\n  // Helper function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      let data = await response.json();\n\n      // IMPORTANT: Enrich partner.files with downloadLink\n      data = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          // Construct the download link here. The backend's /download/<file_id>\n          // will intelligently serve the correct version (anonymized/deanonymized/original)\n          // based on the file's current 'state'.\n          downloadLink: `${API_BASE_URL}/download/${file.id}`\n        })) : []\n      }));\n      setPartners(data);\n      if (!selectedPartnerId && data.length > 0) {\n        setSelectedPartnerId(data[0].id);\n      } else if (selectedPartnerId && !data.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(data.length > 0 ? data[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n  const selectedPartner = selectedPartnerId ? partners.find(p => p.id === selectedPartnerId) : partners[0]; // Default to first partner if none selected\n\n  const handlePartnerSelect = id => {\n    setSelectedPartnerId(id);\n  };\n  const handleAddNewPartner = () => {\n    setIsNewPartnerModalOpen(true);\n  };\n  const handleCloseNewPartnerModal = () => {\n    setIsNewPartnerModalOpen(false);\n  };\n  const handleFileChange = event => {\n    const uploadedFiles = Array.from(event.target.files);\n    if (uploadedFiles.length > 0) {\n      handleFileUpload(uploadedFiles[0]); // Assuming single file upload for simplicity now\n    }\n  };\n  const handleFileUpload = async file => {\n    if (!selectedPartner) {\n      alert(\"Please select a partner first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('partner', selectedPartner.name);\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setReviewData(data.review);\n      setCurrentFileBeingReviewed({\n        id: data.file_id,\n        // Store the file_id here\n        filename: data.filename,\n        type: data.type,\n        content: null,\n        // Content will be handled by ReviewModal if needed\n        partner: data.partner\n      });\n      setIsReviewModalOpen(true);\n    } catch (err) {\n      console.error(\"File upload failed:\", err);\n      alert(`Error uploading file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Handle proceeding with anonymization after human review\n  const handleProceedAnonymization = async updatedReviewItems => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n    const anonymizationPayload = {\n      file_id: currentFileBeingReviewed.id,\n      // IMPORTANT: Send file_id to backend\n      review: updatedReviewItems.map(item => {\n        const cleanedItem = {\n          detect: item.detect,\n          confidence: item.confidence,\n          // Confidence is already 0-1 from ReviewModal\n          ignore: item.ignore\n        };\n        // Conditionally add 'word', 'start', 'end' for text files\n        if (item.word !== undefined) cleanedItem.word = item.word;\n        if (item.start !== undefined) cleanedItem.start = item.start;\n        if (item.end !== undefined) cleanedItem.end = item.end;\n        // Conditionally add 'column', 'topData' for tabular files\n        if (item.column !== undefined) cleanedItem.column = item.column;\n        if (item.topData !== undefined) cleanedItem.topData = item.topData;\n        return cleanedItem;\n      })\n    };\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(anonymizationPayload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const backendResponse = await response.json(); // Get response from backend\n      await fetchPartners(); // Re-fetch all partners and their files to update the table\n\n      alert(`${backendResponse.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate === null || partnerToUpdate === void 0 ? void 0 : partnerToUpdate.files.find(f => f.id === fileId);\n    if (!fileToToggle) return;\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: newState\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to get updated file state and download link\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  // Function to view audit log\n  const onViewAuditLog = async file => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAuditLogData(data);\n    } catch (err) {\n      console.error(\"Failed to fetch audit log:\", err);\n      alert(`Error fetching audit log: ${err.message}`);\n    }\n  };\n\n  // Function to close audit log modal\n  const onCloseAuditLog = () => {\n    setAuditLogData(null);\n  };\n  const onViewPartnerDetails = () => {\n    // This function can be expanded later if you have a separate partner profile page/modal\n    alert(`Viewing profile for ${selectedPartner.name}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n        partners: partners,\n        selectedPartnerId: selectedPartnerId,\n        onSelectPartner: handlePartnerSelect,\n        onAddNewPartner: handleAddNewPartner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), loadingPartners ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading partners...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : selectedPartner ? /*#__PURE__*/_jsxDEV(PartnerDetails, {\n          partner: selectedPartner,\n          onFileUpload: handleFileUpload,\n          onToggleFileAnonymization: handleToggleFileAnonymization,\n          onViewAuditLog: onViewAuditLog // Pass the function to PartnerDetails\n          ,\n          onViewPartnerDetails: onViewPartnerDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-partner-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No partner selected or available. Please add a new partner to begin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddNewPartner,\n            className: \"add-partner-button\",\n            children: \"Add New Partner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), isNewPartnerModalOpen && /*#__PURE__*/_jsxDEV(NewPartnerModal, {\n        onClose: handleCloseNewPartnerModal,\n        onPartnerAdded: fetchPartners\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), isReviewModalOpen && currentFileBeingReviewed && /*#__PURE__*/_jsxDEV(ReviewModal, {\n        filename: currentFileBeingReviewed.filename,\n        fileType: currentFileBeingReviewed.type,\n        initialReviewData: reviewData,\n        onProceed: handleProceedAnonymization,\n        onCancel: handleCancelReview,\n        isAnalyzing: isAnalyzing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), auditLogData && /*#__PURE__*/_jsxDEV(AuditLog, {\n        auditData: auditLogData,\n        onClose: onCloseAuditLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vj6/49zfrpgivGAjxlK4abencV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","BrowserRouter","Router","Routes","Route","Link","Sidenav","PartnerDetails","NewPartnerModal","ReviewModal","AuditLog","jsxDEV","_jsxDEV","API_BASE_URL","DEFAULT_FRONTEND_ICON_PATH","App","_s","partners","setPartners","selectedPartnerId","setSelectedPartnerId","isNewPartnerModalOpen","setIsNewPartnerModalOpen","isReviewModalOpen","setIsReviewModalOpen","reviewData","setReviewData","currentFileBeingReviewed","setCurrentFileBeingReviewed","isAnalyzing","setIsAnalyzing","loadingPartners","setLoadingPartners","error","setError","auditLogData","setAuditLogData","fetchPartners","response","fetch","ok","Error","status","data","json","map","partner","files","file","downloadLink","id","length","some","p","err","console","selectedPartner","find","handlePartnerSelect","handleAddNewPartner","handleCloseNewPartnerModal","handleFileChange","event","uploadedFiles","Array","from","target","handleFileUpload","alert","formData","FormData","append","name","method","body","errorData","review","file_id","filename","type","content","message","handleProceedAnonymization","updatedReviewItems","anonymizationPayload","item","cleanedItem","detect","confidence","ignore","word","undefined","start","end","column","topData","headers","JSON","stringify","backendResponse","handleCancelReview","handleToggleFileAnonymization","partnerId","fileId","partnerToUpdate","fileToToggle","f","newState","state","onViewAuditLog","onCloseAuditLog","onViewPartnerDetails","children","className","onSelectPartner","onAddNewPartner","fileName","_jsxFileName","lineNumber","columnNumber","onFileUpload","onToggleFileAnonymization","onClick","onClose","onPartnerAdded","fileType","initialReviewData","onProceed","onCancel","auditData","_c","$RefreshReg$"],"sources":["/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx"],"sourcesContent":["// src/App.jsx\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport NewPartnerModal from './Components/NewPartnerModal/NewPartnerModal';\nimport ReviewModal from './Components/ReviewModal/ReviewModal';\nimport AuditLog from './Components/AuditLog/AuditLog'; // Import AuditLog\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/default_partner_icon.svg'; // Ensure this path is correct in your public folder\n\nfunction App() {\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isNewPartnerModalOpen, setIsNewPartnerModalOpen] = useState(false);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null);\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [loadingPartners, setLoadingPartners] = useState(true);\n  const [error, setError] = useState(null);\n  const [auditLogData, setAuditLogData] = useState(null); // State for audit log data\n\n  // Helper function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      let data = await response.json();\n\n      // IMPORTANT: Enrich partner.files with downloadLink\n      data = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          // Construct the download link here. The backend's /download/<file_id>\n          // will intelligently serve the correct version (anonymized/deanonymized/original)\n          // based on the file's current 'state'.\n          downloadLink: `${API_BASE_URL}/download/${file.id}`\n        })) : []\n      }));\n\n      setPartners(data);\n      if (!selectedPartnerId && data.length > 0) {\n        setSelectedPartnerId(data[0].id);\n      } else if (selectedPartnerId && !data.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(data.length > 0 ? data[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n\n  const selectedPartner = selectedPartnerId\n    ? partners.find(p => p.id === selectedPartnerId)\n    : partners[0]; // Default to first partner if none selected\n\n  const handlePartnerSelect = (id) => {\n    setSelectedPartnerId(id);\n  };\n\n  const handleAddNewPartner = () => {\n    setIsNewPartnerModalOpen(true);\n  };\n\n  const handleCloseNewPartnerModal = () => {\n    setIsNewPartnerModalOpen(false);\n  };\n\n  const handleFileChange = (event) => {\n    const uploadedFiles = Array.from(event.target.files);\n    if (uploadedFiles.length > 0) {\n      handleFileUpload(uploadedFiles[0]); // Assuming single file upload for simplicity now\n    }\n  };\n\n  const handleFileUpload = async (file) => {\n    if (!selectedPartner) {\n      alert(\"Please select a partner first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('partner', selectedPartner.name);\n\n    setIsAnalyzing(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setReviewData(data.review);\n      setCurrentFileBeingReviewed({\n        id: data.file_id, // Store the file_id here\n        filename: data.filename,\n        type: data.type,\n        content: null, // Content will be handled by ReviewModal if needed\n        partner: data.partner\n      });\n      setIsReviewModalOpen(true);\n    } catch (err) {\n      console.error(\"File upload failed:\", err);\n      alert(`Error uploading file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Handle proceeding with anonymization after human review\n  const handleProceedAnonymization = async (updatedReviewItems) => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n\n    const anonymizationPayload = {\n      file_id: currentFileBeingReviewed.id, // IMPORTANT: Send file_id to backend\n      review: updatedReviewItems.map(item => {\n        const cleanedItem = {\n          detect: item.detect,\n          confidence: item.confidence, // Confidence is already 0-1 from ReviewModal\n          ignore: item.ignore,\n        };\n        // Conditionally add 'word', 'start', 'end' for text files\n        if (item.word !== undefined) cleanedItem.word = item.word;\n        if (item.start !== undefined) cleanedItem.start = item.start;\n        if (item.end !== undefined) cleanedItem.end = item.end;\n        // Conditionally add 'column', 'topData' for tabular files\n        if (item.column !== undefined) cleanedItem.column = item.column;\n        if (item.topData !== undefined) cleanedItem.topData = item.topData;\n        \n        return cleanedItem;\n      }),\n    };\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(anonymizationPayload),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const backendResponse = await response.json(); // Get response from backend\n      await fetchPartners(); // Re-fetch all partners and their files to update the table\n\n      alert(`${backendResponse.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate?.files.find(f => f.id === fileId);\n\n    if (!fileToToggle) return;\n\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ state: newState }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to get updated file state and download link\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  // Function to view audit log\n  const onViewAuditLog = async (file) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setAuditLogData(data);\n    } catch (err) {\n      console.error(\"Failed to fetch audit log:\", err);\n      alert(`Error fetching audit log: ${err.message}`);\n    }\n  };\n\n  // Function to close audit log modal\n  const onCloseAuditLog = () => {\n    setAuditLogData(null);\n  };\n\n  const onViewPartnerDetails = () => {\n    // This function can be expanded later if you have a separate partner profile page/modal\n    alert(`Viewing profile for ${selectedPartner.name}`);\n  };\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        <Sidenav\n          partners={partners}\n          selectedPartnerId={selectedPartnerId}\n          onSelectPartner={handlePartnerSelect}\n          onAddNewPartner={handleAddNewPartner}\n        />\n        <div className=\"main-content\">\n          {error && <div className=\"error-message\">{error}</div>}\n          {loadingPartners ? (\n            <p>Loading partners...</p>\n          ) : selectedPartner ? (\n            <PartnerDetails\n              partner={selectedPartner}\n              onFileUpload={handleFileUpload}\n              onToggleFileAnonymization={handleToggleFileAnonymization}\n              onViewAuditLog={onViewAuditLog} // Pass the function to PartnerDetails\n              onViewPartnerDetails={onViewPartnerDetails}\n            />\n          ) : (\n            <div className=\"no-partner-selected\">\n              <p>No partner selected or available. Please add a new partner to begin.</p>\n              <button onClick={handleAddNewPartner} className=\"add-partner-button\">\n                Add New Partner\n              </button>\n            </div>\n          )}\n        </div>\n\n        {isNewPartnerModalOpen && (\n          <NewPartnerModal onClose={handleCloseNewPartnerModal} onPartnerAdded={fetchPartners} />\n        )}\n\n        {isReviewModalOpen && currentFileBeingReviewed && (\n          <ReviewModal\n            filename={currentFileBeingReviewed.filename}\n            fileType={currentFileBeingReviewed.type}\n            initialReviewData={reviewData}\n            onProceed={handleProceedAnonymization}\n            onCancel={handleCancelReview}\n            isAnalyzing={isAnalyzing}\n          />\n        )}\n\n        {auditLogData && (\n          <AuditLog auditData={auditLogData} onClose={onCloseAuditLog} />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}