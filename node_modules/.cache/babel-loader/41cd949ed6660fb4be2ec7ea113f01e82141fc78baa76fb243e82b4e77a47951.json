{"ast":null,"code":"var _jsxFileName = \"/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review'; // Assuming this is Review.jsx\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/question-mark.png'; // Ensure this path is correct in your public folder\n\nfunction App() {\n  _s();\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [loadingPartners, setLoadingPartners] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review (can be text or tabular format)\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null);\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null);\n  const getFileTypeFromExtension = filename => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const partnersWithFiles = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          downloadLink: file.id ? `${API_BASE_URL}/download/${file.id}` : null\n        })) : []\n      }));\n      setPartners(partnersWithFiles);\n      if (!selectedPartnerId && partnersWithFiles.length > 0) {\n        setSelectedPartnerId(partnersWithFiles[0].id);\n      } else if (selectedPartnerId && !partnersWithFiles.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(partnersWithFiles.length > 0 ? partnersWithFiles[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n  const handleAddPartner = async formData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json();\n      await fetchPartners();\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id);\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n  const handleFileUpload = async filesToUpload => {\n    if (!selectedPartner) {\n      alert(\"Please select a partner first.\");\n      return;\n    }\n    if (!Array.isArray(filesToUpload) || filesToUpload.length === 0) {\n      alert(\"No file selected for upload.\");\n      return;\n    }\n    setIsAnalyzing(true);\n    const file = filesToUpload[0];\n    const fileType = getFileTypeFromExtension(file.name);\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review;\n      setReviewData(detectedPiiFromBackend);\n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id,\n        // Ensure file_id is captured from backend response\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review'\n      });\n      setIsReviewModalOpen(true);\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleProceedAnonymization = async updatedReviewItems => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n    const anonymizationPayload = {\n      file_id: currentFileBeingReviewed.id,\n      // Ensure file_id is sent to backend\n      review: updatedReviewItems.map(item => {\n        const cleanedItem = {\n          detect: item.detect,\n          // Confidence from Review.jsx is 0-100, convert back to 0.0-1.0 for backend\n          confidence: item.confidence / 100,\n          ignore: item.ignore\n        };\n        // Conditionally add keys based on file type (text vs tabular)\n        if (currentFileBeingReviewed.type === 'Text file') {\n          if (item.word !== undefined) cleanedItem.word = item.word;\n          if (item.start !== undefined) cleanedItem.start = item.start;\n          if (item.end !== undefined) cleanedItem.end = item.end;\n        } else if (currentFileBeingReviewed.type === 'Tabular file') {\n          if (item.column !== undefined) cleanedItem.column = item.column;\n          if (item.topData !== undefined) cleanedItem.topData = item.topData;\n        }\n        return cleanedItem;\n      })\n    };\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(anonymizationPayload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const backendResponse = await response.json();\n      await fetchPartners(); // Re-fetch all partners and their files to update the table\n\n      alert(`${backendResponse.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate === null || partnerToUpdate === void 0 ? void 0 : partnerToUpdate.files.find(f => f.id === fileId);\n    if (!fileToToggle) return;\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: newState\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners();\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n  const handleViewAuditLog = async file => {\n    if (!file.id) {\n      alert('Cannot view audit log: File ID is missing.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n      if (!response.ok) {\n        const errorData = await response.json(); // Try to parse JSON for error details\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const auditData = await response.json();\n      setAuditLogData(auditData);\n      setIsAuditLogModalOpen(true);\n    } catch (err) {\n      console.error(\"Failed to fetch audit log:\", err);\n      alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  };\n  const handleViewPartnerDetails = () => {\n    setIsViewPartnerModalOpen(true);\n  };\n  if (loadingPartners) {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Loading partners...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPartners,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n      partners: partners,\n      selectedPartnerId: selectedPartnerId,\n      onSelectPartner: setSelectedPartnerId,\n      onAddPartnerClick: () => setIsAddPartnerModalOpen(true),\n      apiBaseUrl: API_BASE_URL,\n      defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedPartner ? /*#__PURE__*/_jsxDEV(PartnerDetails, {\n        partner: selectedPartner,\n        onFileUpload: handleFileUpload,\n        onToggleFileAnonymization: handleToggleFileAnonymization,\n        onViewAuditLog: handleViewAuditLog,\n        onViewPartnerDetails: handleViewPartnerDetails,\n        apiBaseUrl: API_BASE_URL,\n        defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-partner-selected\",\n        children: partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), isAddPartnerModalOpen && /*#__PURE__*/_jsxDEV(AddPartner, {\n      onClose: () => setIsAddPartnerModalOpen(false),\n      onCreatePartner: handleAddPartner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), isViewPartnerModalOpen && selectedPartner && /*#__PURE__*/_jsxDEV(ViewPartner, {\n      partner: selectedPartner,\n      onClose: () => setIsViewPartnerModalOpen(false),\n      apiBaseUrl: API_BASE_URL,\n      defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), isReviewModalOpen && currentFileBeingReviewed && /*#__PURE__*/_jsxDEV(Review, {\n      fileName: currentFileBeingReviewed.filename,\n      fileType: currentFileBeingReviewed.type // Pass fileType to Review\n      ,\n      detectedPii: reviewData,\n      onProceed: handleProceedAnonymization,\n      onCancel: handleCancelReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), isAuditLogModalOpen && auditLogData && /*#__PURE__*/_jsxDEV(AuditLog, {\n      auditData: auditLogData,\n      onClose: handleCloseAuditLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 9\n    }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tjNBkwQqChC6DFJG5XRxw3aFI/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","v4","uuidv4","Sidenav","PartnerDetails","AddPartner","ViewPartner","LoadingOverlay","Review","AuditLog","jsxDEV","_jsxDEV","API_BASE_URL","DEFAULT_FRONTEND_ICON_PATH","App","_s","partners","setPartners","selectedPartnerId","setSelectedPartnerId","isAddPartnerModalOpen","setIsAddPartnerModalOpen","isViewPartnerModalOpen","setIsViewPartnerModalOpen","isAnalyzing","setIsAnalyzing","loadingPartners","setLoadingPartners","error","setError","isReviewModalOpen","setIsReviewModalOpen","reviewData","setReviewData","currentFileBeingReviewed","setCurrentFileBeingReviewed","isAuditLogModalOpen","setIsAuditLogModalOpen","auditLogData","setAuditLogData","getFileTypeFromExtension","filename","ext","split","pop","toLowerCase","includes","fetchPartners","response","fetch","ok","Error","status","data","json","partnersWithFiles","map","partner","files","file","downloadLink","id","length","some","p","err","console","selectedPartner","find","handleAddPartner","formData","method","body","errorData","addedPartner","alert","name","message","handleFileUpload","filesToUpload","Array","isArray","fileType","FormData","append","backendResponse","detectedPiiFromBackend","review","file_id","type","state","handleProceedAnonymization","updatedReviewItems","anonymizationPayload","item","cleanedItem","detect","confidence","ignore","word","undefined","start","end","column","topData","headers","JSON","stringify","handleToggleFileAnonymization","partnerId","fileId","partnerToUpdate","fileToToggle","f","newState","handleCancelReview","handleViewAuditLog","auditData","handleCloseAuditLog","handleViewPartnerDetails","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onSelectPartner","onAddPartnerClick","apiBaseUrl","defaultIconPath","onFileUpload","onToggleFileAnonymization","onViewAuditLog","onViewPartnerDetails","onClose","onCreatePartner","detectedPii","onProceed","onCancel","_c","$RefreshReg$"],"sources":["/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review'; // Assuming this is Review.jsx\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/question-mark.png'; // Ensure this path is correct in your public folder\n\nfunction App() {\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [loadingPartners, setLoadingPartners] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review (can be text or tabular format)\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null);\n\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null);\n\n  const getFileTypeFromExtension = (filename) => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const partnersWithFiles = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          downloadLink: file.id ? `${API_BASE_URL}/download/${file.id}` : null \n        })) : []\n      }));\n\n      setPartners(partnersWithFiles);\n      if (!selectedPartnerId && partnersWithFiles.length > 0) {\n        setSelectedPartnerId(partnersWithFiles[0].id);\n      } else if (selectedPartnerId && !partnersWithFiles.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(partnersWithFiles.length > 0 ? partnersWithFiles[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n\n  const handleAddPartner = async (formData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        body: formData,\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json();\n      await fetchPartners();\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id);\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n\n  const handleFileUpload = async (filesToUpload) => {\n    if (!selectedPartner) {\n        alert(\"Please select a partner first.\");\n        return;\n    }\n    if (!Array.isArray(filesToUpload) || filesToUpload.length === 0) {\n        alert(\"No file selected for upload.\");\n        return;\n    }\n\n    setIsAnalyzing(true);\n\n    const file = filesToUpload[0];\n    const fileType = getFileTypeFromExtension(file.name);\n\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review;\n\n      setReviewData(detectedPiiFromBackend);\n      \n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id, // Ensure file_id is captured from backend response\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review',\n      });\n      setIsReviewModalOpen(true);\n\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleProceedAnonymization = async (updatedReviewItems) => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n\n    const anonymizationPayload = {\n      file_id: currentFileBeingReviewed.id, // Ensure file_id is sent to backend\n      review: updatedReviewItems.map(item => {\n        const cleanedItem = {\n          detect: item.detect,\n          // Confidence from Review.jsx is 0-100, convert back to 0.0-1.0 for backend\n          confidence: item.confidence / 100, \n          ignore: item.ignore,\n        };\n        // Conditionally add keys based on file type (text vs tabular)\n        if (currentFileBeingReviewed.type === 'Text file') {\n            if (item.word !== undefined) cleanedItem.word = item.word;\n            if (item.start !== undefined) cleanedItem.start = item.start;\n            if (item.end !== undefined) cleanedItem.end = item.end;\n        } else if (currentFileBeingReviewed.type === 'Tabular file') {\n            if (item.column !== undefined) cleanedItem.column = item.column;\n            if (item.topData !== undefined) cleanedItem.topData = item.topData;\n        }\n        return cleanedItem;\n      }),\n    };\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(anonymizationPayload),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const backendResponse = await response.json();\n      await fetchPartners(); // Re-fetch all partners and their files to update the table\n\n      alert(`${backendResponse.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate?.files.find(f => f.id === fileId);\n\n    if (!fileToToggle) return;\n\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ state: newState }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners();\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n\n  const handleViewAuditLog = async (file) => {\n    if (!file.id) {\n        alert('Cannot view audit log: File ID is missing.');\n        return;\n    }\n    try {\n        const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n        if (!response.ok) {\n            const errorData = await response.json(); // Try to parse JSON for error details\n            throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n        }\n        const auditData = await response.json();\n        setAuditLogData(auditData);\n        setIsAuditLogModalOpen(true);\n    } catch (err) {\n        console.error(\"Failed to fetch audit log:\", err);\n        alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  }\n\n  const handleViewPartnerDetails = () => {\n    setIsViewPartnerModalOpen(true);\n  };\n\n  if (loadingPartners) {\n    return <LoadingOverlay message=\"Loading partners...\" />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"app-container error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button onClick={fetchPartners} className=\"retry-button\">Retry</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app-container\">\n      <Sidenav\n        partners={partners}\n        selectedPartnerId={selectedPartnerId}\n        onSelectPartner={setSelectedPartnerId}\n        onAddPartnerClick={() => setIsAddPartnerModalOpen(true)}\n        apiBaseUrl={API_BASE_URL}\n        defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n      />\n\n      <div className=\"main-content\">\n        {selectedPartner ? (\n          <PartnerDetails\n            partner={selectedPartner}\n            onFileUpload={handleFileUpload}\n            onToggleFileAnonymization={handleToggleFileAnonymization}\n            onViewAuditLog={handleViewAuditLog}\n            onViewPartnerDetails={handleViewPartnerDetails}\n            apiBaseUrl={API_BASE_URL}\n            defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n          />\n        ) : (\n          <div className=\"no-partner-selected\">\n            {partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"}\n          </div>\n        )}\n      </div>\n\n      {isAddPartnerModalOpen && (\n        <AddPartner\n          onClose={() => setIsAddPartnerModalOpen(false)}\n          onCreatePartner={handleAddPartner}\n        />\n      )}\n\n      {isViewPartnerModalOpen && selectedPartner && (\n        <ViewPartner\n          partner={selectedPartner}\n          onClose={() => setIsViewPartnerModalOpen(false)}\n          apiBaseUrl={API_BASE_URL}\n          defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n        />\n      )}\n\n      {isReviewModalOpen && currentFileBeingReviewed && (\n        <Review\n          fileName={currentFileBeingReviewed.filename}\n          fileType={currentFileBeingReviewed.type} // Pass fileType to Review\n          detectedPii={reviewData}\n          onProceed={handleProceedAnonymization}\n          onCancel={handleCancelReview}\n        />\n      )}\n\n      {isAuditLogModalOpen && auditLogData && (\n        <AuditLog\n          auditData={auditLogData}\n          onClose={handleCloseAuditLog}\n        />\n      )}\n\n      {isAnalyzing && <LoadingOverlay message=\"Processing...\" />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}