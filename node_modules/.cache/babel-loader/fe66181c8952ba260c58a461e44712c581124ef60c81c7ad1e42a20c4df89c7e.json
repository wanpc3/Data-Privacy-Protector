{"ast":null,"code":"var _jsxFileName = \"/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review';\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/question-mark.png';\nfunction App() {\n  _s();\n  //Partners state - will be fetched from backend\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n\n  //Loading Screen Indicator\n  const [isAnalyzing, setIsAnalyzing] = useState(false); // For file upload/anonymization process\n  const [loadingPartners, setLoadingPartners] = useState(true); // For initial partners fetch\n  const [error, setError] = useState(null); // For general fetch errors\n\n  // Human Review\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null); // The file object currently in review\n\n  // Audit\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null);\n\n  // Helper function to determine file type based on extension (still useful for sending to backend)\n  const getFileTypeFromExtension = filename => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n\n  // Function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const partnersWithFiles = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          // Ensure downloadLink is constructed based on file.id\n          downloadLink: file.id ? `${API_BASE_URL}/download/${file.id}` : null\n        })) : []\n      }));\n      setPartners(partnersWithFiles);\n      if (!selectedPartnerId && partnersWithFiles.length > 0) {\n        setSelectedPartnerId(partnersWithFiles[0].id);\n      } else if (selectedPartnerId && !partnersWithFiles.some(p => p.id === selectedPartnerId)) {\n        // If selected partner was deleted, select first available or none\n        setSelectedPartnerId(partnersWithFiles.length > 0 ? partnersWithFiles[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  // Initial data fetch on component mount\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n\n  // Handle adding a new partner via backend API\n  const handleAddPartner = async formData => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json();\n      await fetchPartners();\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id);\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n\n  // Handle file upload and initial PII analysis via backend API\n  // This now correctly expects an array of files, as passed from PartnerDetails.jsx\n  const handleFileUpload = async filesToUpload => {\n    if (!selectedPartner) {\n      alert(\"Please select a partner first.\");\n      return;\n    }\n    // Check if filesToUpload is empty or not an array with at least one element\n    if (!Array.isArray(filesToUpload) || filesToUpload.length === 0) {\n      alert(\"No file selected for upload.\");\n      return;\n    }\n    setIsAnalyzing(true);\n    const file = filesToUpload[0]; // Take the first file from the array\n    const fileType = getFileTypeFromExtension(file.name);\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review;\n      setReviewData(detectedPiiFromBackend);\n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id,\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review'\n        // downloadLink is not needed here as it will be set upon successful anonymization\n        // and re-fetching of partners.\n      });\n      setIsReviewModalOpen(true);\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  //Handle proceeding with anonymization after human review\n  const handleProceedAnonymization = async () => {\n    if (!currentFileBeingReviewed || !currentFileBeingReviewed.id) {\n      alert(\"Error: No file selected for anonymization or file ID is missing.\");\n      return;\n    }\n    const payload = {\n      file_id: currentFileBeingReviewed.id,\n      // <--- MAKE SURE THIS IS CORRECT\n      partner: currentFileBeingReviewed.partner,\n      filename: currentFileBeingReviewed.filename,\n      type: currentFileBeingReviewed.type,\n      review: reviewedPiiData // Your PII data\n    };\n    console.log(\"Sending payload to /proceed:\", payload); // <-- ADD THIS LOG\n    console.log(\"File ID being sent:\", currentFileBeingReviewed.id); // <-- ADD THIS LOG\n\n    try {\n      const response = await fetch('http://localhost:5000/proceed', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Anonymization failed:', errorData.error);\n        alert(`Error anonymizing file: ${errorData.error}`);\n      } else {\n        const result = await response.json();\n        alert(result.message);\n        // Refresh partner list to show updated file state\n        fetchPartners();\n        onCloseReviewModal(); // Close the review modal\n      }\n    } catch (error) {\n      console.error('Network or other error during anonymization:', error);\n      alert('An unexpected error occurred during anonymization.');\n    }\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate === null || partnerToUpdate === void 0 ? void 0 : partnerToUpdate.files.find(f => f.id === fileId);\n    if (!fileToToggle) return;\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: newState\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to get updated file state and download link\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  //Handle cancelling the review process\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n\n  // Handle viewing the audit log for a file\n  const handleViewAuditLog = async file => {\n    if (!file.id) {\n      alert('Cannot view audit log: File ID is missing.');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const auditData = await response.json();\n      setAuditLogData(auditData); // Set the auditData directly\n      setIsAuditLogModalOpen(true); // Open the audit log modal\n    } catch (err) {\n      console.error(\"Failed to fetch audit log:\", err);\n      alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n\n  // Handle closing the audit log modal\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  };\n\n  // --- Handle opening ViewPartner modal ---\n  const handleViewPartnerDetails = () => {\n    setIsViewPartnerModalOpen(true);\n  };\n\n  // --- Initial Loading State for Partners ---\n  if (loadingPartners) {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Loading partners...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- Error State for Partners ---\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPartners,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n      partners: partners,\n      selectedPartnerId: selectedPartnerId,\n      onSelectPartner: setSelectedPartnerId,\n      onAddPartnerClick: () => setIsAddPartnerModalOpen(true),\n      apiBaseUrl: API_BASE_URL,\n      defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedPartner ? /*#__PURE__*/_jsxDEV(PartnerDetails, {\n        partner: selectedPartner,\n        onFileUpload: handleFileUpload,\n        onToggleFileAnonymization: handleToggleFileAnonymization,\n        onViewAuditLog: handleViewAuditLog,\n        onViewPartnerDetails: handleViewPartnerDetails,\n        apiBaseUrl: API_BASE_URL,\n        defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-partner-selected\",\n        children: partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), isAddPartnerModalOpen && /*#__PURE__*/_jsxDEV(AddPartner, {\n      onClose: () => setIsAddPartnerModalOpen(false),\n      onCreatePartner: handleAddPartner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), isViewPartnerModalOpen && selectedPartner && /*#__PURE__*/_jsxDEV(ViewPartner, {\n      partner: selectedPartner,\n      onClose: () => setIsViewPartnerModalOpen(false),\n      apiBaseUrl: API_BASE_URL,\n      defaultIconPath: DEFAULT_FRONTEND_ICON_PATH\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this), isReviewModalOpen && currentFileBeingReviewed && /*#__PURE__*/_jsxDEV(Review, {\n      fileName: currentFileBeingReviewed.filename,\n      fileType: currentFileBeingReviewed.type,\n      detectedPii: reviewData,\n      onProceed: handleProceedAnonymization,\n      onCancel: handleCancelReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }, this), isAuditLogModalOpen && auditLogData && /*#__PURE__*/_jsxDEV(AuditLog, {\n      auditData: auditLogData,\n      onClose: handleCloseAuditLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tjNBkwQqChC6DFJG5XRxw3aFI/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","v4","uuidv4","Sidenav","PartnerDetails","AddPartner","ViewPartner","LoadingOverlay","Review","AuditLog","jsxDEV","_jsxDEV","API_BASE_URL","DEFAULT_FRONTEND_ICON_PATH","App","_s","partners","setPartners","selectedPartnerId","setSelectedPartnerId","isAddPartnerModalOpen","setIsAddPartnerModalOpen","isViewPartnerModalOpen","setIsViewPartnerModalOpen","isAnalyzing","setIsAnalyzing","loadingPartners","setLoadingPartners","error","setError","isReviewModalOpen","setIsReviewModalOpen","reviewData","setReviewData","currentFileBeingReviewed","setCurrentFileBeingReviewed","isAuditLogModalOpen","setIsAuditLogModalOpen","auditLogData","setAuditLogData","getFileTypeFromExtension","filename","ext","split","pop","toLowerCase","includes","fetchPartners","response","fetch","ok","Error","status","data","json","partnersWithFiles","map","partner","files","file","downloadLink","id","length","some","p","err","console","selectedPartner","find","handleAddPartner","formData","method","body","errorData","addedPartner","alert","name","message","handleFileUpload","filesToUpload","Array","isArray","fileType","FormData","append","backendResponse","detectedPiiFromBackend","review","file_id","type","state","handleProceedAnonymization","payload","reviewedPiiData","log","headers","JSON","stringify","result","onCloseReviewModal","handleToggleFileAnonymization","partnerId","fileId","partnerToUpdate","fileToToggle","f","newState","handleCancelReview","handleViewAuditLog","auditData","handleCloseAuditLog","handleViewPartnerDetails","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onSelectPartner","onAddPartnerClick","apiBaseUrl","defaultIconPath","onFileUpload","onToggleFileAnonymization","onViewAuditLog","onViewPartnerDetails","onClose","onCreatePartner","detectedPii","onProceed","onCancel","_c","$RefreshReg$"],"sources":["/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review';\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:5000';\nconst DEFAULT_FRONTEND_ICON_PATH = '/icons/question-mark.png';\n\nfunction App() {\n  //Partners state - will be fetched from backend\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n\n  //Loading Screen Indicator\n  const [isAnalyzing, setIsAnalyzing] = useState(false); // For file upload/anonymization process\n  const [loadingPartners, setLoadingPartners] = useState(true); // For initial partners fetch\n  const [error, setError] = useState(null); // For general fetch errors\n\n  // Human Review\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null); // The file object currently in review\n\n  // Audit\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null);\n\n  // Helper function to determine file type based on extension (still useful for sending to backend)\n  const getFileTypeFromExtension = (filename) => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n\n  // Function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const partnersWithFiles = data.map(partner => ({\n        ...partner,\n        files: partner.files ? partner.files.map(file => ({\n          ...file,\n          // Ensure downloadLink is constructed based on file.id\n          downloadLink: file.id ? `${API_BASE_URL}/download/${file.id}` : null \n        })) : []\n      }));\n\n      setPartners(partnersWithFiles);\n      if (!selectedPartnerId && partnersWithFiles.length > 0) {\n        setSelectedPartnerId(partnersWithFiles[0].id);\n      } else if (selectedPartnerId && !partnersWithFiles.some(p => p.id === selectedPartnerId)) {\n        // If selected partner was deleted, select first available or none\n        setSelectedPartnerId(partnersWithFiles.length > 0 ? partnersWithFiles[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  // Initial data fetch on component mount\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n\n  // Handle adding a new partner via backend API\n  const handleAddPartner = async (formData) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        body: formData,\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json();\n      await fetchPartners();\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id);\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n\n  // Handle file upload and initial PII analysis via backend API\n  // This now correctly expects an array of files, as passed from PartnerDetails.jsx\n  const handleFileUpload = async (filesToUpload) => {\n    if (!selectedPartner) {\n        alert(\"Please select a partner first.\");\n        return;\n    }\n    // Check if filesToUpload is empty or not an array with at least one element\n    if (!Array.isArray(filesToUpload) || filesToUpload.length === 0) {\n        alert(\"No file selected for upload.\");\n        return;\n    }\n\n    setIsAnalyzing(true);\n\n    const file = filesToUpload[0]; // Take the first file from the array\n    const fileType = getFileTypeFromExtension(file.name);\n\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review;\n\n      setReviewData(detectedPiiFromBackend);\n      \n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id,\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review',\n        // downloadLink is not needed here as it will be set upon successful anonymization\n        // and re-fetching of partners.\n      });\n      setIsReviewModalOpen(true);\n\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  //Handle proceeding with anonymization after human review\n  const handleProceedAnonymization = async () => {\n      if (!currentFileBeingReviewed || !currentFileBeingReviewed.id) {\n          alert(\"Error: No file selected for anonymization or file ID is missing.\");\n          return;\n      }\n\n      const payload = {\n          file_id: currentFileBeingReviewed.id, // <--- MAKE SURE THIS IS CORRECT\n          partner: currentFileBeingReviewed.partner,\n          filename: currentFileBeingReviewed.filename,\n          type: currentFileBeingReviewed.type,\n          review: reviewedPiiData, // Your PII data\n      };\n\n      console.log(\"Sending payload to /proceed:\", payload); // <-- ADD THIS LOG\n      console.log(\"File ID being sent:\", currentFileBeingReviewed.id); // <-- ADD THIS LOG\n\n      try {\n          const response = await fetch('http://localhost:5000/proceed', {\n              method: 'POST',\n              headers: {\n                  'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(payload),\n          });\n\n          if (!response.ok) {\n              const errorData = await response.json();\n              console.error('Anonymization failed:', errorData.error);\n              alert(`Error anonymizing file: ${errorData.error}`);\n          } else {\n              const result = await response.json();\n              alert(result.message);\n              // Refresh partner list to show updated file state\n              fetchPartners();\n              onCloseReviewModal(); // Close the review modal\n          }\n      } catch (error) {\n          console.error('Network or other error during anonymization:', error);\n          alert('An unexpected error occurred during anonymization.');\n      }\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate?.files.find(f => f.id === fileId);\n\n    if (!fileToToggle) return;\n\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ state: newState }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to get updated file state and download link\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  //Handle cancelling the review process\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n\n  // Handle viewing the audit log for a file\n  const handleViewAuditLog = async (file) => {\n    if (!file.id) {\n        alert('Cannot view audit log: File ID is missing.');\n        return;\n    }\n    try {\n        const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n        }\n        const auditData = await response.json();\n        setAuditLogData(auditData); // Set the auditData directly\n        setIsAuditLogModalOpen(true); // Open the audit log modal\n    } catch (err) {\n        console.error(\"Failed to fetch audit log:\", err);\n        alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n\n  // Handle closing the audit log modal\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  }\n\n  // --- Handle opening ViewPartner modal ---\n  const handleViewPartnerDetails = () => {\n    setIsViewPartnerModalOpen(true);\n  };\n\n  // --- Initial Loading State for Partners ---\n  if (loadingPartners) {\n    return <LoadingOverlay message=\"Loading partners...\" />;\n  }\n\n  // --- Error State for Partners ---\n  if (error) {\n    return (\n      <div className=\"app-container error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button onClick={fetchPartners} className=\"retry-button\">Retry</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidenav */}\n      <Sidenav\n        partners={partners}\n        selectedPartnerId={selectedPartnerId}\n        onSelectPartner={setSelectedPartnerId}\n        onAddPartnerClick={() => setIsAddPartnerModalOpen(true)}\n        apiBaseUrl={API_BASE_URL}\n        defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n      />\n\n      {/* Main Content Area */}\n      <div className=\"main-content\">\n        {selectedPartner ? (\n          <PartnerDetails\n            partner={selectedPartner}\n            onFileUpload={handleFileUpload}\n            onToggleFileAnonymization={handleToggleFileAnonymization}\n            onViewAuditLog={handleViewAuditLog}\n            onViewPartnerDetails={handleViewPartnerDetails}\n            apiBaseUrl={API_BASE_URL}\n            defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n          />\n        ) : (\n          <div className=\"no-partner-selected\">\n            {partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"}\n          </div>\n        )}\n      </div>\n\n      {/* Add Partner Modal */}\n      {isAddPartnerModalOpen && (\n        <AddPartner\n          onClose={() => setIsAddPartnerModalOpen(false)}\n          onCreatePartner={handleAddPartner}\n        />\n      )}\n\n      {/* View/Edit Partner Modal */}\n      {isViewPartnerModalOpen && selectedPartner && (\n        <ViewPartner\n          partner={selectedPartner}\n          onClose={() => setIsViewPartnerModalOpen(false)}\n          apiBaseUrl={API_BASE_URL}\n          defaultIconPath={DEFAULT_FRONTEND_ICON_PATH}\n        />\n      )}\n\n      {/* Review Before Anonymization Modal */}\n      {isReviewModalOpen && currentFileBeingReviewed && (\n        <Review\n          fileName={currentFileBeingReviewed.filename}\n          fileType={currentFileBeingReviewed.type}\n          detectedPii={reviewData}\n          onProceed={handleProceedAnonymization}\n          onCancel={handleCancelReview}\n        />\n      )}\n\n      {/* Audit Log Modal */}\n      {isAuditLogModalOpen && auditLogData && (\n        <AuditLog\n          auditData={auditLogData}\n          onClose={handleCloseAuditLog}\n        />\n      )}\n\n      {/* Analyzing Overlay (for file upload/anonymization) */}\n      {isAnalyzing && <LoadingOverlay message=\"Processing...\" />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}