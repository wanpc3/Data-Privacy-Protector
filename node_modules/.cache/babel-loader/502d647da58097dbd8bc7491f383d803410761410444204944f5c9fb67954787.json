{"ast":null,"code":"var _jsxFileName = \"/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review';\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000';\nfunction App() {\n  _s();\n  //Partners state - will be fetched from backend\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n\n  //Loading Screen Indicator\n  const [isAnalyzing, setIsAnalyzing] = useState(false); // For file upload/anonymization process\n  const [loadingPartners, setLoadingPartners] = useState(true); // For initial partners fetch\n  const [error, setError] = useState(null); // For general fetch errors\n\n  // Human Review\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null); // The file object currently in review\n\n  // Audit\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null); // Audit log data for display\n\n  // Helper function to determine file type based on extension (still useful for sending to backend)\n  const getFileTypeFromExtension = filename => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n\n  // Function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      // Assuming /api/partners is still used for getting the list\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPartners(data);\n      if (!selectedPartnerId && data.length > 0) {\n        setSelectedPartnerId(data[0].id);\n      } else if (selectedPartnerId && !data.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(data.length > 0 ? data[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  // Initial data fetch on component mount\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n\n  // Handle adding a new partner via backend API\n  const handleAddPartner = async formData => {\n    // Expects FormData from AddPartner.jsx\n    try {\n      // Backend image shows '/create-partner' endpoint for POST\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        // No 'Content-Type' header needed; browser sets it automatically for FormData\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json(); // Backend might return the new partner object\n      await fetchPartners(); // Re-fetch all partners to update UI\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id); // Select the newly added partner\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n\n  // Handle file upload and initial PII analysis via backend API\n  const handleFileUpload = async filesToUpload => {\n    if (!selectedPartner) return;\n    setIsAnalyzing(true); // Show analyzing overlay\n\n    const file = filesToUpload[0];\n    const fileType = getFileTypeFromExtension(file.name);\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review; // This is the array from backend\n\n      // --- CRITICAL FIX: Simply pass the backend response's review array directly ---\n      // We'll let the Review component handle adding the 'id' for display purposes.\n      setReviewData(detectedPiiFromBackend); // This is the array received from backend, with 'detect' field\n\n      // Also ensure the currentFileBeingReviewed has the correct file_id from backend if available\n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id,\n        // Use the actual file_id from backend for consistency if needed later\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review',\n        // Initial state\n        downloadLink: '#' // Placeholder\n      });\n      setIsReviewModalOpen(true);\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const handleProceedAnonymization = async updatedReviewItems => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n    const anonymizationPayload = {\n      partner: selectedPartner.name,\n      filename: currentFileBeingReviewed.filename,\n      type: currentFileBeingReviewed.type,\n      review: updatedReviewItems.map(item => ({\n        detect: item.detect,\n        // <--- FIX: Use item.detect directly (which Review.jsx now correctly uses)\n        start: item.start,\n        end: item.end,\n        confidence: item.confidence / 100,\n        // Convert back to 0.0-1.0\n        word: item.word,\n        ignore: item.ignore,\n        // For tabular, ensure column and topData are also passed back if present\n        column: item.column,\n        topData: item.topData\n      }))\n    };\n\n    // Filter out undefined/null properties for a cleaner payload if needed\n    anonymizationPayload.review = anonymizationPayload.review.map(item => {\n      const cleanedItem = {};\n      for (const key in item) {\n        if (item[key] !== undefined && item[key] !== null) {\n          cleanedItem[key] = item[key];\n        }\n      }\n      return cleanedItem;\n    });\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(anonymizationPayload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch all partners and their files\n\n      alert(`${currentFileBeingReviewed.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate === null || partnerToUpdate === void 0 ? void 0 : partnerToUpdate.files.find(f => f.id === fileId);\n    if (!fileToToggle) return;\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n    try {\n      // Assuming backend still handles this via /files/:id/state\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state: newState\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to ensure UI is in sync\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  //Handle cancelling the review process\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n\n  // Handle viewing the audit log for a file\n  const handleViewAuditLog = async file => {\n    if (!file.id) {\n      alert('Cannot view audit log: File ID is missing.');\n      return;\n    }\n    try {\n      // Assuming backend still handles this via /files/:id/auditlog\n      const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const auditData = await response.json();\n      setAuditLogData({\n        filename: file.filename,\n        // Use filename from current file object\n        fileType: file.type,\n        // Use fileType from current file object\n        ...auditData // Merge backend audit data (intendedFor, anonymizedMethod, detectedEntitiesSummary)\n      });\n      setIsAuditLogModalOpen(true);\n    } catch (err) {\n      console.error(\"Failed to fetch audit log:\", err);\n      alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n\n  // Handle closing the audit log modal\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  };\n\n  // --- Initial Loading State for Partners ---\n  if (loadingPartners) {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Loading partners...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 12\n    }, this);\n  }\n\n  // --- Error State for Partners ---\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPartners,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidenav, {\n      partners: partners,\n      selectedPartnerId: selectedPartnerId,\n      onSelectPartner: setSelectedPartnerId,\n      onAddPartnerClick: () => setIsAddPartnerModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedPartner ? /*#__PURE__*/_jsxDEV(PartnerDetails, {\n        partner: selectedPartner,\n        onFileUpload: handleFileUpload,\n        onToggleFileAnonymization: handleToggleFileAnonymization,\n        onViewAuditLog: handleViewAuditLog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-partner-selected\",\n        children: partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), isAddPartnerModalOpen && /*#__PURE__*/_jsxDEV(AddPartner, {\n      onClose: () => setIsAddPartnerModalOpen(false),\n      onCreatePartner: handleAddPartner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), isReviewModalOpen && currentFileBeingReviewed && /*#__PURE__*/_jsxDEV(Review, {\n      fileName: currentFileBeingReviewed.filename,\n      fileType: currentFileBeingReviewed.type,\n      detectedPii: reviewData,\n      onProceed: handleProceedAnonymization,\n      onCancel: handleCancelReview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), isAuditLogModalOpen && auditLogData && /*#__PURE__*/_jsxDEV(AuditLog, {\n      auditData: auditLogData,\n      onClose: handleCloseAuditLog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), isAnalyzing && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      message: \"Processing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tjNBkwQqChC6DFJG5XRxw3aFI/o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","v4","uuidv4","Sidenav","PartnerDetails","AddPartner","ViewPartner","LoadingOverlay","Review","AuditLog","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","partners","setPartners","selectedPartnerId","setSelectedPartnerId","isAddPartnerModalOpen","setIsAddPartnerModalOpen","isViewPartnerModalOpen","setIsViewPartnerModalOpen","isAnalyzing","setIsAnalyzing","loadingPartners","setLoadingPartners","error","setError","isReviewModalOpen","setIsReviewModalOpen","reviewData","setReviewData","currentFileBeingReviewed","setCurrentFileBeingReviewed","isAuditLogModalOpen","setIsAuditLogModalOpen","auditLogData","setAuditLogData","getFileTypeFromExtension","filename","ext","split","pop","toLowerCase","includes","fetchPartners","response","fetch","ok","Error","status","data","json","length","id","some","p","err","console","selectedPartner","find","handleAddPartner","formData","method","body","errorData","addedPartner","alert","name","message","handleFileUpload","filesToUpload","file","fileType","FormData","append","backendResponse","detectedPiiFromBackend","review","file_id","type","state","downloadLink","handleProceedAnonymization","updatedReviewItems","anonymizationPayload","partner","map","item","detect","start","end","confidence","word","ignore","column","topData","cleanedItem","key","undefined","headers","JSON","stringify","handleToggleFileAnonymization","partnerId","fileId","partnerToUpdate","fileToToggle","files","f","newState","handleCancelReview","handleViewAuditLog","auditData","handleCloseAuditLog","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onSelectPartner","onAddPartnerClick","onFileUpload","onToggleFileAnonymization","onViewAuditLog","onClose","onCreatePartner","detectedPii","onProceed","onCancel","_c","$RefreshReg$"],"sources":["/home/wwan-ab-/Desktop/AmbankHack/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Sidenav from './Components/Sidenav/Sidenav';\nimport PartnerDetails from './Components/Partner/PartnerDetails';\nimport AddPartner from './Components/Partner/AddPartner';\nimport ViewPartner from './Components/Partner/ViewPartner';\nimport LoadingOverlay from './Components/Common/LoadingOverlay';\nimport Review from './Components/Review/Review';\nimport AuditLog from './Components/AuditLog/AuditLog';\nimport './App.css';\n\nconst API_BASE_URL = 'http://localhost:5000';\n\nfunction App() {\n  //Partners state - will be fetched from backend\n  const [partners, setPartners] = useState([]);\n  const [selectedPartnerId, setSelectedPartnerId] = useState(null);\n  const [isAddPartnerModalOpen, setIsAddPartnerModalOpen] = useState(false);\n  const [isViewPartnerModalOpen, setIsViewPartnerModalOpen] = useState(false);\n\n  //Loading Screen Indicator\n  const [isAnalyzing, setIsAnalyzing] = useState(false); // For file upload/anonymization process\n  const [loadingPartners, setLoadingPartners] = useState(true); // For initial partners fetch\n  const [error, setError] = useState(null); // For general fetch errors\n\n  // Human Review\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [reviewData, setReviewData] = useState(null); // Detected PII for review\n  const [currentFileBeingReviewed, setCurrentFileBeingReviewed] = useState(null); // The file object currently in review\n\n  // Audit\n  const [isAuditLogModalOpen, setIsAuditLogModalOpen] = useState(false);\n  const [auditLogData, setAuditLogData] = useState(null); // Audit log data for display\n\n  // Helper function to determine file type based on extension (still useful for sending to backend)\n  const getFileTypeFromExtension = (filename) => {\n    const ext = filename.split('.').pop().toLowerCase();\n    if (['txt'].includes(ext)) {\n      return 'Text file';\n    } else if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext)) {\n      return 'Image file';\n    } else if (['csv', 'xlsx', 'xlsm', 'xls'].includes(ext)) {\n      return 'Tabular file';\n    } else if (['doc', 'docx', 'pdf'].includes(ext)) {\n      return 'Document file';\n    }\n    return 'Unknown file';\n  };\n\n  // Function to fetch partners from the backend\n  const fetchPartners = useCallback(async () => {\n    setLoadingPartners(true);\n    setError(null);\n    try {\n      // Assuming /api/partners is still used for getting the list\n      const response = await fetch(`${API_BASE_URL}/api/partners`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setPartners(data);\n      if (!selectedPartnerId && data.length > 0) {\n        setSelectedPartnerId(data[0].id);\n      } else if (selectedPartnerId && !data.some(p => p.id === selectedPartnerId)) {\n        setSelectedPartnerId(data.length > 0 ? data[0].id : null);\n      }\n    } catch (err) {\n      console.error(\"Failed to fetch partners:\", err);\n      setError(\"Failed to load partners. Please ensure the backend is running and accessible.\");\n    } finally {\n      setLoadingPartners(false);\n    }\n  }, [selectedPartnerId]);\n\n  // Initial data fetch on component mount\n  useEffect(() => {\n    fetchPartners();\n  }, [fetchPartners]);\n\n  const selectedPartner = partners.find(p => p.id === selectedPartnerId);\n\n  // Handle adding a new partner via backend API\n  const handleAddPartner = async (formData) => { // Expects FormData from AddPartner.jsx\n    try {\n      // Backend image shows '/create-partner' endpoint for POST\n      const response = await fetch(`${API_BASE_URL}/create-partner`, {\n        method: 'POST',\n        // No 'Content-Type' header needed; browser sets it automatically for FormData\n        body: formData,\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const addedPartner = await response.json(); // Backend might return the new partner object\n      await fetchPartners(); // Re-fetch all partners to update UI\n      setIsAddPartnerModalOpen(false);\n      setSelectedPartnerId(addedPartner.id); // Select the newly added partner\n      alert(`Partner \"${addedPartner.name}\" added successfully!`);\n    } catch (err) {\n      console.error(\"Failed to add partner:\", err);\n      alert(`Error adding partner: ${err.message}`);\n    }\n  };\n\n  // Handle file upload and initial PII analysis via backend API\n  const handleFileUpload = async (filesToUpload) => {\n    if (!selectedPartner) return;\n\n    setIsAnalyzing(true); // Show analyzing overlay\n\n    const file = filesToUpload[0];\n    const fileType = getFileTypeFromExtension(file.name);\n\n    const formData = new FormData();\n    formData.append('partner', selectedPartner.name);\n    formData.append('file', file);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const backendResponse = await response.json();\n      const detectedPiiFromBackend = backendResponse.review; // This is the array from backend\n\n      // --- CRITICAL FIX: Simply pass the backend response's review array directly ---\n      // We'll let the Review component handle adding the 'id' for display purposes.\n      setReviewData(detectedPiiFromBackend); // This is the array received from backend, with 'detect' field\n      \n      // Also ensure the currentFileBeingReviewed has the correct file_id from backend if available\n      setCurrentFileBeingReviewed({\n        id: backendResponse.file_id, // Use the actual file_id from backend for consistency if needed later\n        filename: backendResponse.filename,\n        type: backendResponse.type,\n        state: 'Pending Review', // Initial state\n        downloadLink: '#', // Placeholder\n      });\n      setIsReviewModalOpen(true);\n\n    } catch (err) {\n      console.error(\"Failed to upload and analyze file:\", err);\n      alert(`Error uploading and analyzing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const handleProceedAnonymization = async (updatedReviewItems) => {\n    setIsReviewModalOpen(false);\n    setIsAnalyzing(true);\n\n    const anonymizationPayload = {\n      partner: selectedPartner.name,\n      filename: currentFileBeingReviewed.filename,\n      type: currentFileBeingReviewed.type,\n      review: updatedReviewItems.map(item => ({\n        detect: item.detect, // <--- FIX: Use item.detect directly (which Review.jsx now correctly uses)\n        start: item.start,\n        end: item.end,\n        confidence: item.confidence / 100, // Convert back to 0.0-1.0\n        word: item.word,\n        ignore: item.ignore,\n        // For tabular, ensure column and topData are also passed back if present\n        column: item.column,\n        topData: item.topData\n      })),\n    };\n\n    // Filter out undefined/null properties for a cleaner payload if needed\n    anonymizationPayload.review = anonymizationPayload.review.map(item => {\n        const cleanedItem = {};\n        for (const key in item) {\n            if (item[key] !== undefined && item[key] !== null) {\n                cleanedItem[key] = item[key];\n            }\n        }\n        return cleanedItem;\n    });\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/proceed`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(anonymizationPayload),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      await fetchPartners(); // Re-fetch all partners and their files\n\n      alert(`${currentFileBeingReviewed.filename} has been anonymized!`);\n      setReviewData(null);\n      setCurrentFileBeingReviewed(null);\n\n    } catch (err) {\n      console.error(\"Failed to proceed with anonymization:\", err);\n      alert(`Error anonymizing file: ${err.message}`);\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  // Handle toggling file anonymization state (De-anonymize/Anonymize)\n  const handleToggleFileAnonymization = async (partnerId, fileId) => {\n    const partnerToUpdate = partners.find(p => p.id === partnerId);\n    const fileToToggle = partnerToUpdate?.files.find(f => f.id === fileId);\n\n    if (!fileToToggle) return;\n\n    const newState = fileToToggle.state === 'Anonymized' ? 'De-anonymized' : 'Anonymized';\n\n    try {\n      // Assuming backend still handles this via /files/:id/state\n      const response = await fetch(`${API_BASE_URL}/api/files/${fileId}/state`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ state: newState }),\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      await fetchPartners(); // Re-fetch partners to ensure UI is in sync\n      alert(`File state updated to ${newState} for ${fileToToggle.filename}.`);\n    } catch (err) {\n      console.error(\"Failed to toggle file anonymization:\", err);\n      alert(`Error toggling anonymization: ${err.message}`);\n    }\n  };\n\n  //Handle cancelling the review process\n  const handleCancelReview = () => {\n    setIsReviewModalOpen(false);\n    setReviewData(null);\n    setCurrentFileBeingReviewed(null);\n    alert('Review cancelled. File not anonymized.');\n  };\n\n  // Handle viewing the audit log for a file\n  const handleViewAuditLog = async (file) => {\n    if (!file.id) {\n        alert('Cannot view audit log: File ID is missing.');\n        return;\n    }\n    try {\n        // Assuming backend still handles this via /files/:id/auditlog\n        const response = await fetch(`${API_BASE_URL}/api/files/${file.id}/auditlog`);\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n        }\n        const auditData = await response.json();\n        setAuditLogData({\n            filename: file.filename, // Use filename from current file object\n            fileType: file.type,     // Use fileType from current file object\n            ...auditData // Merge backend audit data (intendedFor, anonymizedMethod, detectedEntitiesSummary)\n        });\n        setIsAuditLogModalOpen(true);\n    } catch (err) {\n        console.error(\"Failed to fetch audit log:\", err);\n        alert(`Audit log not available for this file: ${err.message}`);\n    }\n  };\n\n  // Handle closing the audit log modal\n  const handleCloseAuditLog = () => {\n    setIsAuditLogModalOpen(false);\n    setAuditLogData(null);\n  }\n\n  // --- Initial Loading State for Partners ---\n  if (loadingPartners) {\n    return <LoadingOverlay message=\"Loading partners...\" />;\n  }\n\n  // --- Error State for Partners ---\n  if (error) {\n    return (\n      <div className=\"app-container error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button onClick={fetchPartners} className=\"retry-button\">Retry</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app-container\">\n      {/* Sidenav */}\n      <Sidenav\n        partners={partners}\n        selectedPartnerId={selectedPartnerId}\n        onSelectPartner={setSelectedPartnerId}\n        onAddPartnerClick={() => setIsAddPartnerModalOpen(true)}\n      />\n\n      {/* Main Content Area */}\n      <div className=\"main-content\">\n        {selectedPartner ? (\n          <PartnerDetails\n            partner={selectedPartner}\n            onFileUpload={handleFileUpload}\n            onToggleFileAnonymization={handleToggleFileAnonymization}\n            onViewAuditLog={handleViewAuditLog}\n          />\n        ) : (\n          <div className=\"no-partner-selected\">\n            {partners.length === 0 ? \"No partners found. Add a new partner to begin!\" : \"Select a partner to view details.\"}\n          </div>\n        )}\n      </div>\n\n      {/* Add Partner Modal */}\n      {isAddPartnerModalOpen && (\n        <AddPartner\n          onClose={() => setIsAddPartnerModalOpen(false)}\n          onCreatePartner={handleAddPartner}\n        />\n      )}\n\n      {/* Review Before Anonymization Modal */}\n      {isReviewModalOpen && currentFileBeingReviewed && (\n        <Review\n          fileName={currentFileBeingReviewed.filename}\n          fileType={currentFileBeingReviewed.type}\n          detectedPii={reviewData}\n          onProceed={handleProceedAnonymization}\n          onCancel={handleCancelReview}\n        />\n      )}\n\n      {/* Audit Log Modal */}\n      {isAuditLogModalOpen && auditLogData && (\n        <AuditLog\n          auditData={auditLogData}\n          onClose={handleCloseAuditLog}\n        />\n      )}\n\n      {/* Analyzing Overlay (for file upload/anonymization) */}\n      {isAnalyzing && <LoadingOverlay message=\"Processing...\" />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}